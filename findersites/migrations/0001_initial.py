# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-09-22 21:52
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import findersites.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50, verbose_name=b'Marca')),
                ('event_name', models.CharField(max_length=20, verbose_name=b'Nombre del evento')),
                ('event_description', models.CharField(max_length=50, verbose_name=b'Descripcion corta del evento')),
                ('event_fullDescription', models.CharField(max_length=250, verbose_name=b'Descripcion larga del evento')),
                ('event_direccion', models.CharField(max_length=50, verbose_name=b'Direccion')),
                ('event_provincia', models.CharField(max_length=50, verbose_name=b'Provincia')),
                ('event_pais', models.CharField(max_length=50, verbose_name=b'Pais')),
                ('radio', models.FloatField(verbose_name=b'Radio')),
                ('latitud', models.CharField(max_length=10, verbose_name=b'Latitud')),
                ('longitud', models.CharField(max_length=10, verbose_name=b'Longitud')),
                ('image', models.ImageField(upload_to=b'eventos/', verbose_name=b'Imagen')),
            ],
            options={
                'verbose_name_plural': 'Crear evento',
            },
        ),
        migrations.CreateModel(
            name='EventoLimitado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ini_date', models.DateTimeField(validators=[findersites.models.fechaIniMayorActual], verbose_name=b'Fecha de inicio')),
                ('exp_date', models.DateTimeField(validators=[findersites.models.fechaExpMayorIni], verbose_name=b'Fecha de fin')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='findersites.Evento', verbose_name=b'Evento')),
            ],
            options={
                'verbose_name_plural': 'Convertir evento en evento limitado',
            },
        ),
        migrations.CreateModel(
            name='EventoParada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cooldown', models.DurationField(verbose_name=b'Tiempo de espera')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='findersites.Evento', verbose_name=b'Evento')),
            ],
            options={
                'verbose_name_plural': 'Convertir evento en evento parada',
            },
        ),
        migrations.CreateModel(
            name='Imagen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to=b'', verbose_name=b'Imagen')),
            ],
            options={
                'verbose_name_plural': 'Imagenes',
            },
        ),
        migrations.CreateModel(
            name='Recompensa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_name', models.CharField(max_length=70, verbose_name=b'Recompensa')),
            ],
            options={
                'verbose_name_plural': 'Crear recompensa',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=40)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioEventoLimitado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findersites.EventoLimitado', verbose_name=b'Evento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Usuario')),
            ],
            options={
                'verbose_name_plural': 'Inscribir usuario a evento limitado',
            },
        ),
        migrations.CreateModel(
            name='UsuarioEventoParada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_use', models.DateTimeField(verbose_name=b'Ultima vez usado')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findersites.EventoParada', verbose_name=b'Evento')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Usuario')),
            ],
            options={
                'verbose_name_plural': 'Inscribir usuario a evento parada',
            },
        ),
        migrations.CreateModel(
            name='UsuarioRecompensa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(code=b'nomatch', message=b'Length has to be 12', regex=b'^.{12}$')], verbose_name=b'Codigo')),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='findersites.Recompensa', verbose_name=b'Recompensa')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'Usuario')),
            ],
            options={
                'verbose_name': 'recompensa',
                'verbose_name_plural': 'Agregar recompensa',
            },
        ),
        migrations.AddField(
            model_name='evento',
            name='reward',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='findersites.Recompensa', verbose_name=b'Recompensa'),
        ),
        migrations.AlterUniqueTogether(
            name='usuarioeventoparada',
            unique_together=set([('user', 'event')]),
        ),
        migrations.AlterUniqueTogether(
            name='usuarioeventolimitado',
            unique_together=set([('user', 'event')]),
        ),
    ]
